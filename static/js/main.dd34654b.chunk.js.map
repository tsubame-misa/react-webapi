{"version":3,"sources":["pages/pokemon.js","pages/detail.js","pages/uranai.js","App.js","index.js"],"names":["getImageUrl","url","a","fetch","response","json","data","imgUrl","sprites","front_default","Image","size","useState","img","setImg","useEffect","then","className","src","style","width","convertName","name","s","String","slice","toUpperCase","map","input","en","ja","Name","japaName","setJapaName","Type","types","type","en2jaType","Content","URL","forms","Pokemon","id","setData","to","getSpecies","species","genera","genus","Genera","setSpecies","getExplanation","textData","len","flavor_text_entries","length","i","language","push","flavor_text","Explanation","exp","setExp","getEvlData","evl3","evl2","undefined","chain","evolves_to","evl1","nameData","GetEvolutions","elvName","evl","setEvl","Evl","evolution_chain","Object","keys","key","Evolutions","height","toFixed","weight","Detail","useParams","console","log","Data2Name","PrintName","Uranai","number","setNumber","backgroundColor","onClick","min","Math","ceil","max","floor","random","getRandomNum","PokeList","ID","TabLink","children","exact","path","match","color","App","basename","process","href","component","render","document","querySelector"],"mappings":"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","file":"static/js/main.dd34654b.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport en2jaType from \"./type.json\";\r\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\r\n\r\nexport const getImageUrl = async (url) => {\r\n  const response = await fetch(url);\r\n  const data = await response.json();\r\n  const imgUrl = data.sprites.front_default;\r\n  return imgUrl;\r\n};\r\n\r\nexport const Image = ({ url, size }) => {\r\n  const [img, setImg] = useState(null);\r\n  useEffect(() => {\r\n    getImageUrl(url).then((img) => {\r\n      setImg(img);\r\n    });\r\n  },[]);\r\n  return (\r\n    <figure className=\"image\" /*style={{backgroundColor:\"yellow\"}}*/>\r\n      <img src={img} style={{ width: `${size}%` }} />\r\n    </figure>\r\n  );\r\n};\r\n\r\nexport const convertName = async (name) => {\r\n  const s = new String(name);\r\n  name = s.slice(0, 1).toUpperCase() + s.slice(1);\r\n  const response = await fetch(\r\n    \"https://gist.githubusercontent.com/PonDad/93922f63c3143489e30c3716d3d176d2/raw/0ea137397f9701828ecd7da7d253168678646488/pokemon.json\"\r\n  );\r\n  const data = await response.json();\r\n  data.map((input) => {\r\n    if (input.en === name) {\r\n      name = input.ja;\r\n    }\r\n  });\r\n  return name;\r\n};\r\n\r\nexport const Name = ({ name }) => {\r\n  const [japaName, setJapaName] = useState(null);\r\n  useEffect(() => {\r\n    convertName(name).then((japaName) => {\r\n      setJapaName(japaName);\r\n    });\r\n  },[]);\r\n  return (\r\n    <div className=\"has-text-left\"> \r\n      <h1>{japaName}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const convertType = (type) => {\r\n  //console.log(type);\r\n  en2jaType.map((input) => {\r\n    if (input.en == type) {\r\n      type = input.ja;\r\n    }\r\n  });\r\n  return type; //<div>{type}hello</div>;\r\n};\r\n\r\nexport const Type = ({ types }) => {\r\n  return (\r\n    <div>\r\n      <h1>\r\n        タイプ：\r\n        {types.map((input) => convertType(input.type.name) + \" \")}\r\n      </h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Content = ({ data }) => {\r\n  if (data == null) {\r\n    return (\r\n      <div className=\"content\">\r\n        <p>...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const URL = data.forms[0].url;\r\n  const t = data.types;\r\n  return (\r\n    <div>\r\n      <Image url={URL} size={50} />\r\n      <Name name={data.name} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Pokemon = ({ id }) => {\r\n  const [data, setData] = useState(null);\r\n  useEffect(() => {\r\n    fetch(`https://pokeapi.co/api/v2/pokemon/${id}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setData(data);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Link to={`/pokemon_detaile/${id}`}>\r\n      <div>\r\n        <section className=\"hero\">\r\n          <div className=\"hero-body\">\r\n            <div className=\"container\">\r\n              <Content data={data} />\r\n              {/*console.log(data)*/}\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default Pokemon;\r\n","import React, { useState, useEffect } from \"react\";\r\n//import { render } from \"react-dom\";\r\n//import { withRouter } from \"react-router\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Image, Name, Type } from \"./pokemon\";\r\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\r\n\r\nconst getSpecies = async (url) => {\r\n  const response = await fetch(url);\r\n  const data = await response.json();\r\n  //console.log(data.genera[0].genus);\r\n  const species = data.genera[0].genus;\r\n  //console.log(data);\r\n  return species;\r\n};\r\n\r\nconst Genera = ({ data }) => {\r\n  const url = data.species.url;\r\n  const [species, setSpecies] = useState();\r\n  useEffect(() => {\r\n    getSpecies(url).then((species) => {\r\n      setSpecies(species);\r\n    });\r\n  }, []);\r\n\r\n  return <div>分類 : {species}</div>;\r\n};\r\n\r\nconst getExplanation = async (url) => {\r\n  const response = await fetch(url);\r\n  const data = await response.json();\r\n  const textData = [];\r\n  //console.log(data.flavor_text_entries.length);\r\n  const len = data.flavor_text_entries.length;\r\n  for (let i = 0; i < len; i++) {\r\n    if (data.flavor_text_entries[i].language.name === \"ja\") {\r\n      textData.push(data.flavor_text_entries[i].flavor_text);\r\n      //console.log(data.flavor_text_entries[i].flavor_text);ja-Hrkt\r\n    }\r\n  }\r\n  return textData;\r\n};\r\n\r\nconst Explanation = ({ data }) => {\r\n  const url = data.species.url;\r\n  const [exp, setExp] = useState(null);\r\n  useEffect(() => {\r\n    getExplanation(url).then((exp) => {\r\n      setExp(exp);\r\n    });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <h2 className=\"subtitle\">\r\n        説明<br></br>\r\n      </h2>\r\n      {exp}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst getEvlData = async ({ url }) => {\r\n  const response = await fetch(url);\r\n  const data = await response.json();\r\n  let evl3 = null;\r\n  let evl2 = null;\r\n  if (data.chain.evolves_to[0].evolves_to[0] !== undefined) {\r\n    evl3 = data.chain.evolves_to[0].evolves_to[0].species.name;\r\n  }\r\n  if (data.chain.evolves_to[0] !== undefined) {\r\n    evl2 = data.chain.evolves_to[0].species.name;\r\n  }\r\n  const evl1 = data.chain.species.name;\r\n  const nameData = [evl1, evl2, evl3];\r\n  return nameData;\r\n};\r\n\r\nconst Evl = (url) => {\r\n  //console.log(url);\r\n  const [evl, setEvl] = useState();\r\n  useEffect(() => {\r\n    getEvlData(url).then((evl) => {\r\n      setEvl(evl);\r\n    });\r\n  }, []);\r\n  return evl;\r\n};\r\n\r\nconst GetEvolutions = ({ data }) => {\r\n  if (data == null) {\r\n    return <div></div>;\r\n  }\r\n  const url = data.evolution_chain;\r\n  const elvName = Evl(url);\r\n  //console.log(elvName);\r\n  return (\r\n    <div className=\"columns\">\r\n      {elvName\r\n        ? Object.keys(elvName).map((key) => {\r\n            //console.log(elvName[key]);\r\n            return (\r\n              <div className=\"column is-4\">\r\n                {elvName[key] ? (\r\n                  /*<Link to={`/pokemon_detaile/${elvName[key]}`}>}*/\r\n                  <div>\r\n                    <Name name={elvName[key]} />\r\n                    <Image\r\n                      url={`https://pokeapi.co/api/v2/pokemon-form/${elvName[key]}`}\r\n                      size={70}\r\n                    />\r\n                  </div>\r\n                ) : (\r\n                  /*} </Link>*/\r\n                  <div></div>\r\n                )}\r\n              </div>\r\n            );\r\n          })\r\n        : \"\"}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Evolutions = ({ id }) => {\r\n  const [data, setData] = useState(null);\r\n  useEffect(() => {\r\n    fetch(`https://pokeapi.co/api/v2/pokemon-species/${id}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setData(data);\r\n      });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <h1 className=\"subtitle\">進化系</h1>\r\n      <GetEvolutions data={data} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Content = ({ data }) => {\r\n  if (data == null) {\r\n    return (\r\n      <div className=\"content\">\r\n        <p>loading...</p>\r\n      </div>\r\n    );\r\n  }\r\n  const URL = data.forms[0].url;\r\n  return (\r\n    <div>\r\n      <div>\r\n        {/*<Link to={`/pokemon_detaile/${data.id - 1}`}>◀</Link>*/}\r\n        <Link to=\"/\">\r\n          <button>図鑑に戻る</button>\r\n        </Link>\r\n        {/*} <Link to={`/pokemon_detaile/${data.id + 1}`}>▶</Link>*/}\r\n      </div>\r\n      <div className=\"columns\">\r\n        <div className=\"column is-3\">\r\n          <Image url={URL} size={90} />\r\n        </div>\r\n        <div className=\"column is-4\">\r\n          {/*<div style={{ backgroundColor: \"#f68b39\" }}>*/}\r\n          <br></br>\r\n          <div className=\"hero\">\r\n            <h1 className=\"title\">\r\n              <Name name={data.name} />\r\n            </h1>\r\n            <Genera data={data} />\r\n            <Type types={data.types} />\r\n            <p>高さ : {(data.height * 0.1).toFixed(1)}m</p>\r\n            <p>重さ : {(data.weight * 0.1).toFixed(1)}Kg</p>\r\n            <br></br>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Explanation data={data} />\r\n      <br></br>\r\n      <br></br>\r\n      <Evolutions id={data.id} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Detail = () => {\r\n  const input = useParams();\r\n  const id = input.id;\r\n  const [data, setData] = useState(null);\r\n  useEffect(() => {\r\n    fetch(`https://pokeapi.co/api/v2/pokemon/${id}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setData(data);\r\n      });\r\n  }, []);\r\n  console.log(input);\r\n  const [nid, nsetId] = useState(id);\r\n  return (\r\n    <div>\r\n      <section className=\"hero\">\r\n        <div className=\"hero-body\">\r\n          <div className=\"container\">\r\n            {/*} <button onClick={() => {nsetId(Number(nid) + 1);\r\n            console.log(nid);}}>\r\n              <Link to={`/pokemon_detaile/${nid}`}>\r\n             ◀\r\n             </Link></button>\r\n         {nid}*/}\r\n            <Content data={data} />\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Detail;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Image, Name,  Type } from \"./pokemon\";\r\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\r\n\r\n\r\nconst getRandomNum = () => {\r\n    const min = Math.ceil(1);\r\n    const max = Math.floor(200);\r\n    return Math.floor(Math.random() * (max - min)) + min; \r\n}\r\n\r\nconst Data2Name = ({data}) =>{\r\n    if(data===null){\r\n        return <div></div>;\r\n    }\r\n    //console.log(data.name);\r\n    return(<div className=\"title\"><Name name={data.name}/></div>);\r\n}\r\n\r\n\r\nconst PrintName = (id) => {\r\n    //console.log(id.id);\r\n    const [data, setData] = useState(null);\r\n    useEffect(() => {\r\n        fetch(`https://pokeapi.co/api/v2/pokemon/${id.id}`)\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            setData(data);\r\n          });\r\n      }, []);\r\n    return (\r\n        <div><Data2Name data={data}/></div>);\r\n}\r\n\r\nconst Uranai = () =>{\r\n    const [number, setNumber] = useState();\r\n   \r\n    console.log(number);\r\n    return(\r\n      　<div>\r\n          <section className=\"hero\" style={{backgroundColor:\"#b3f4ff\"}}>\r\n           \r\n        <div className=\"hero-body\">\r\n            <br></br>\r\n            <h1 className=\"title\">ポケモン占い</h1>\r\n            <button onClick={()=> setNumber(getRandomNum())}>占う</button>\r\n            <Link to=\"/\">\r\n            &emsp;  <button>図鑑に戻る</button>\r\n            </Link>\r\n        \r\n        </div>\r\n        </section>\r\n        \r\n        {number? \r\n          <div>\r\n            <section className=\"hero\">\r\n                <div className=\"hero-body\">\r\n                    <div className=\"container\">\r\n                    <h1 className=\"subtitle\">今日のラッキーポケモンは...<PrintName id={number}/></h1>\r\n                    <Image\r\n                        url={`https://pokeapi.co/api/v2/pokemon-form/${number}`}\r\n                        size={35}/>\r\n                    </div>\r\n                </div>\r\n            </section> \r\n        </div>:<div></div>}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default Uranai;","import React, { useEffect, useState } from \"react\";\r\nimport Pokemon from \"./pages/pokemon\";\r\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\r\nimport Detail from \"./pages/detail\";\r\nimport Uranai  from \"./pages/uranai\";\r\n\r\nconst PokeList = () => {\r\n  const len = 200;\r\n  const ID = [len];\r\n  for (let i = 1; i <= len; i++) {\r\n    ID[i - 1] = i;\r\n  }\r\n  return (\r\n    <div>\r\n      <div className=\"columns is-vcentered is-multiline\">\r\n        {ID.map((i) => (\r\n          <div className=\"column is-3\">\r\n            <Pokemon id={i} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst TabLink = ({ to, children, exact }) => (\r\n  <Route\r\n    path={to}\r\n    exact={exact}\r\n    children={({ match }) => {\r\n      return (\r\n        <Link to={to} style={{ color: \"#282c34\" }}>\r\n          {children}\r\n        </Link>\r\n      );\r\n    }}\r\n  />\r\n);\r\n\r\n\r\n\r\nconst App = () => {\r\n  const len = 32;\r\n  const ID = [len];\r\n  for (let i = 1; i <= len; i++) {\r\n    ID[i - 1] = i;\r\n  }\r\n\r\n  return (\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <header style={{ backgroundColor: \"#f08080\" }}>\r\n        <section className=\"hero\">\r\n          <div className=\"hero-body\">\r\n            <div className=\"container\">\r\n              <h1 className=\"title has-text-weight-semibold\tis-large\">\r\n                ポケモン図鑑(No.1~200)&ensp;\r\n                <span className=\" has-text-white\">\r\n                  from&ensp;\r\n                  </span>\r\n                <a href=\"https://pokeapi.co/docs/v2\">PokeAPI</a>\r\n              </h1>\r\n              <div>オマケ：ポケモンうらない&ensp;\r\n              <Link to=\"/pokemon-uranai\">\r\n              <button>GO</button>\r\n              </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </header>\r\n      <TabLink to=\"/\" exact></TabLink>\r\n\r\n     \r\n      <div>\r\n        <Route path=\"/\" component={PokeList} exact />\r\n        <Route path=\"/pokemon_detaile/:id\" component={Detail} />\r\n        <Route path=\"/pokemon-uranai\" component={Uranai} />\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"bulma/css/bulma.css\";\r\n\r\nrender(<App />, document.querySelector(\"#content\"));\r\n"],"sourceRoot":""}