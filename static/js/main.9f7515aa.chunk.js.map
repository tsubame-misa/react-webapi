{"version":3,"sources":["pages/pokemon.js","pages/detail.js","App.js","index.js"],"names":["getImageUrl","url","a","fetch","response","json","data","imgUrl","sprites","front_default","Image","size","useState","img","setImg","useEffect","then","className","src","style","width","convertName","name","s","String","slice","toUpperCase","map","input","en","ja","Name","japaName","setJapaName","Type","types","type","en2jaType","Content","URL","forms","Pokemon","id","setData","to","getSpecies","species","genera","genus","Genera","setSpecies","getExplanation","flavor_text_entries","flavor_text","textData","len","length","i","language","push","Explanation","exp","setExp","height","toFixed","weight","Detail","useParams","PokeList","ID","TabLink","children","exact","path","match","color","App","backgroundColor","href","component","render","document","querySelector"],"mappings":"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","file":"static/js/main.9f7515aa.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport en2jaType from \"./type.json\";\r\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\r\n\r\nexport const getImageUrl = async (url) => {\r\n  const response = await fetch(url);\r\n  const data = await response.json();\r\n  const imgUrl = data.sprites.front_default;\r\n  return imgUrl;\r\n};\r\n\r\nexport const Image = ({ url, size }) => {\r\n  const [img, setImg] = useState(null);\r\n  useEffect(() => {\r\n    getImageUrl(url).then((img) => {\r\n      setImg(img);\r\n    });\r\n  });\r\n  return (\r\n    <figure className=\"image\" /*style={{backgroundColor:\"yellow\"}}*/>\r\n      <img src={img} style={{ width: `${size}%` }} />\r\n    </figure>\r\n  );\r\n};\r\n\r\nexport const convertName = async (name) => {\r\n  const s = new String(name);\r\n  name = s.slice(0, 1).toUpperCase() + s.slice(1);\r\n  const response = await fetch(\r\n    \"https://gist.githubusercontent.com/PonDad/93922f63c3143489e30c3716d3d176d2/raw/0ea137397f9701828ecd7da7d253168678646488/pokemon.json\"\r\n  );\r\n  const data = await response.json();\r\n  data.map((input) => {\r\n    if (input.en === name) {\r\n      name = input.ja;\r\n    }\r\n  });\r\n  return name;\r\n};\r\n\r\nexport const Name = ({ name }) => {\r\n  const [japaName, setJapaName] = useState(null);\r\n  useEffect(() => {\r\n    convertName(name).then((japaName) => {\r\n      setJapaName(japaName);\r\n    });\r\n  });\r\n  return (\r\n    <div className=\"has-text-left\"> \r\n      <h1>{japaName}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const convertType = (type) => {\r\n  //console.log(type);\r\n  en2jaType.map((input) => {\r\n    if (input.en == type) {\r\n      type = input.ja;\r\n    }\r\n  });\r\n  return type; //<div>{type}hello</div>;\r\n};\r\n\r\nexport const Type = ({ types }) => {\r\n  return (\r\n    <div>\r\n      <h1>\r\n        タイプ：\r\n        {types.map((input) => convertType(input.type.name) + \" \")}\r\n      </h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Content = ({ data }) => {\r\n  if (data == null) {\r\n    return (\r\n      <div className=\"content\">\r\n        <p>loading...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const URL = data.forms[0].url;\r\n  const t = data.types;\r\n  return (\r\n    <div>\r\n      <Image url={URL} size={50} />\r\n      <Name name={data.name} />\r\n      {/*} <Type types={data.types} />/*/}\r\n      {/*} <p>{t.map((input) => Type(input.type.name))}</p>*/}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Pokemon = ({ id }) => {\r\n  const [data, setData] = useState(null);\r\n  useEffect(() => {\r\n    fetch(`https://pokeapi.co/api/v2/pokemon/${id}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setData(data);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Link to={`/pokemon_detaile/${id}`}>\r\n      <div>\r\n        <section className=\"hero\">\r\n          <div className=\"hero-body\">\r\n            <div className=\"container\">\r\n              <Content data={data} />\r\n              {/*console.log(data)*/}\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default Pokemon;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Image, Name, Type } from \"./pokemon\";\r\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\r\n\r\nconst getSpecies = async (url) => {\r\n  const response = await fetch(url);\r\n  const data = await response.json();\r\n  //console.log(data.genera[0].genus);\r\n  const species = data.genera[0].genus;\r\n  //console.log(data);\r\n  return species;\r\n};\r\n\r\nconst Genera = ({ data }) => {\r\n  const url = data.species.url;\r\n  const [species, setSpecies] = useState();\r\n  useEffect(() => {\r\n    getSpecies(url).then((species) => {\r\n      setSpecies(species);\r\n    });\r\n  });\r\n\r\n  return <div>分類 : {species}</div>;\r\n};\r\n\r\nconst getExplanation = async (url) => {\r\n  const response = await fetch(url);\r\n  const data = await response.json();\r\n  //const text1 = data.flavor_text_entries[29].flavor_text;\r\n  const text2 = data.flavor_text_entries[53].flavor_text;\r\n  const textData = [];\r\n  //console.log(data.flavor_text_entries.length);\r\n  const len = data.flavor_text_entries.length;\r\n  for (let i = 0; i < len; i++) {\r\n    if (data.flavor_text_entries[i].language.name === \"ja\") {\r\n      textData.push(data.flavor_text_entries[i].flavor_text);\r\n      //console.log(data.flavor_text_entries[i].flavor_text);ja-Hrkt\r\n    }\r\n  }\r\n  return textData;\r\n};\r\n\r\nconst Explanation = ({ data }) => {\r\n  const url = data.species.url;\r\n  const [exp, setExp] = useState();\r\n  useEffect(() => {\r\n    getExplanation(url).then((exp) => {\r\n      setExp(exp);\r\n    });\r\n  });\r\n  return (\r\n    <div>\r\n      <h2 className=\"subtitle\">\r\n        説明<br></br>\r\n      </h2>\r\n      {exp}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Content = ({ data }) => {\r\n  if (data == null) {\r\n    return (\r\n      <div className=\"content\">\r\n        <p>loading...</p>\r\n      </div>\r\n    );\r\n  }\r\n  //console.log(data);\r\n  const URL = data.forms[0].url;\r\n  const t = data.types;\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Link to={`/pokemon_detaile/${data.id - 1}`}>◀</Link>\r\n        <Link to=\"/react-webapi\">\r\n          <button>図鑑に戻る</button>\r\n        </Link>\r\n        <Link to={`/pokemon_detaile/${data.id + 1}`}>▶</Link>\r\n      </div>\r\n      <div className=\"columns\">\r\n        <div className=\"column is-3\">\r\n          <Image url={URL} size={90} />\r\n        </div>\r\n        <div className=\"column is-4\">\r\n          {/*<div style={{ backgroundColor: \"#f68b39\" }}>*/}\r\n          <br></br>\r\n          <div className=\"hero\">\r\n            <h1 className=\"title\">\r\n              <Name name={data.name} />\r\n            </h1>\r\n            <Genera data={data} />\r\n            <Type types={data.types} />\r\n            <p>高さ : {(data.height * 0.1).toFixed(1)}m</p>\r\n            <p>重さ : {(data.weight * 0.1).toFixed(1)}Kg</p>\r\n            <br></br>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Explanation data={data} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Detail = () => {\r\n  const input = useParams();\r\n  const id = input.id;\r\n  const [data, setData] = useState(null);\r\n  useEffect(() => {\r\n    fetch(`https://pokeapi.co/api/v2/pokemon/${id}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setData(data);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <section className=\"hero\">\r\n        <div className=\"hero-body\">\r\n          <div className=\"container\">\r\n            <Content data={data} />\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Detail;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Pokemon from \"./pages/pokemon\";\r\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\r\nimport Detail from \"./pages/detail\";\r\n\r\nconst PokeList = () => {\r\n  const len = 32;\r\n  const ID = [len];\r\n  for (let i = 1; i <= len; i++) {\r\n    ID[i - 1] = i;\r\n  }\r\n  return (\r\n    <div>\r\n      <div className=\"columns is-vcentered is-multiline\">\r\n        {ID.map((i) => (\r\n          <div className=\"column is-3\">\r\n            <Pokemon id={i} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst TabLink = ({ to, children, exact }) => (\r\n  <Route\r\n    path={to}\r\n    exact={exact}\r\n    children={({ match }) => {\r\n      return (\r\n        <Link to={to} style={{ color: \"#282c34\" }}>\r\n          {children}\r\n        </Link>\r\n      );\r\n    }}\r\n  />\r\n);\r\n\r\nconst Top = () => {\r\n  return (\r\n    <div>\r\n      <header>topPage</header>\r\n      <body>\r\n        <Link to=\"/pokedex\">zukan</Link>\r\n      </body>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst App = () => {\r\n  const len = 32;\r\n  const ID = [len];\r\n  for (let i = 1; i <= len; i++) {\r\n    ID[i - 1] = i;\r\n  }\r\n\r\n  return (\r\n    <Router /*basename={process.env.PUBLIC_URL}*/>\r\n      <header style={{ backgroundColor: \"#f08080\" }}>\r\n        <section className=\"hero\">\r\n          <div className=\"hero-body\">\r\n            <div className=\"container\">\r\n              <h1 className=\"title\">\r\n                ポケモン図鑑 from{\" \"}\r\n                <a href=\"https://pokeapi.co/docs/v2\">PokeAPI</a>\r\n              </h1>\r\n              {/*<Link to=\"/pokedex\">zukan</Link>*/}\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </header>\r\n      <TabLink to=\"/react-webapi\" exact></TabLink>\r\n\r\n      {/*<div className=\"hero-foot\">\r\n        <nav className=\"tabs is-boxed is-fullwidth\">\r\n          <div className=\"container\">\r\n            <ul>\r\n              <TabLink to=\"/\" exact>\r\n                Top\r\n              </TabLink>\r\n              <TabLink to=\"/pokedex\">図鑑を見る</TabLink>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n  </div>*/}\r\n\r\n      {/*<div>\r\n        <header>\r\n          <section className=\"hero\">\r\n            <div className=\"hero-body\">\r\n              <div className=\"container\">\r\n                <h1 className=\"title\">\r\n                  Pokedex from <a href=\"https://pokeapi.co/docs/v2\">PokeAPI</a>\r\n                </h1>\r\n                <Link to=\"pokemon_detaile\">detail</Link>\r\n              </div>\r\n            </div>\r\n          </section>\r\n          <div className=\"columns is-vcentered is-multiline\">\r\n          {ID.map((i) => (\r\n            <div className=\"column is-3\">\r\n              <Pokemon id={i} />\r\n            </div>\r\n          ))}\r\n          </div>\r\n        </header>\r\n          </div>*/}\r\n\r\n      <div>\r\n        <Route path=\"/react-webapi\" component={PokeList} exact />\r\n        {/*<Route path=\"/pokedex\" component={PokeList} />*/}\r\n        <Route path=\"/pokemon_detaile/:id\" component={Detail} />\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"bulma/css/bulma.css\";\r\n\r\nrender(<App />, document.querySelector(\"#content\"));\r\n"],"sourceRoot":""}